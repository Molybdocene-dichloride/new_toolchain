list(APPEND CMAKE_MODULE_PATH @ToolchainDir@/script)

include(@ToolchainDir@/script/UseTS.cmake)
include(@ToolchainDir@/mod/buildToolchainMod.cmake)

cmake_minimum_required(VERSION 3.1)
project(@NAME@ CXX TS)

set(IS_TO_TARGET TRUE)
set(BUILD_TYPE debug)

getPathsFile(@PATH@make.json)

set(ASSETS "${RES}" "${GUI}" "${ADDIT}")
set(SASSETS "${SRES}" "${SGUI}" "${SADDIT}")

message("sedim")
message(${SDEV})
message(${DEV})
message(${SLIBS})
message(${LIBS})
message(${SPRELOADER})
message(${PRELOADER})
message(${SRES})
message(${RES})
message(${SGUI})
message(${GUI})
message("${ADDIT}")
message("${SADDIT}")

message(${DEVTARGET})

message("${TS}")
message("${STS}")

message("reddddnir")
message(@PATH@${SDEV}/tsconfig.json)

#[[if(NOT EXISTS @PATH@${SLIBS}/tsconfig.json)
    set(od "\"**/*\"" "\"../../toolchain/declarations/*.d.ts\"")
    generate_tscfg(
        SOURCE_DIRS @PATH@${SLIBS}/
        FILE_PATH tsconfig.json
        INCLUDES ${od}
    )]]
#[[endif()

if(NOT EXISTS @PATH@${SDEV}/tsconfig.json)]]
    set(od "\"../lib\"")
    generate_tscfg(
        SOURCE_DIRS @PATH@${SDEV}/
        FILE_PATH tsconfig.json
        INCLUDES ${od}
        INNER true
    )
#endif()

message(FATAL_ERROR ERRRR!!!!!!!!)

set(outputdeclarationspreloader ${output}/declarations/${PRELOADER})
set(outputdeclarationslib ${output}/declarations/${LIBS})
set(outputdeclarationsdev ${output}/declarations/${DEV})

#if(list LENGTH GLOB(@PATH@${SLIBS}/"*.ts") AND NOT EXISTS @PATH@${outputdeclarations}/${LIBS})
    #[[create_ts_library_declarations(
        SOURCE_DIRS @PATH@${SLIBS}
        OUTPUT_DIRS @PATH@${outputdeclarations}/${LIBS}
    )]]
#endif()

#if(NOT EXISTS @PATH@${outputdeclarations}/${DEV})
    create_ts_library_declarations(
        SOURCE_DIRS @PATH@${SDEV}
        OUTPUT_DIRS @PATH@${outputdeclarations}/${DEV}
    )
#endif()

copyResources(
    @PATH@
    ${outputmod}
    "${SASSETS}"
    "${ASSETS}"
    FALSE
)

generateAndCopyBuildCfg(@PATH@ "${ASSETS}" "${LIBS}" ${BUILD_TYPE})

#if(NOT EXISTS @PATH@${outputmod}/${DEV})
    add_tchainmod(
        @NAME@
        @PATH@
        "${STS}"
        "${TS}"
        ${DEVTARGET}
    )
#endif()