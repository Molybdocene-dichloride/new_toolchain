list(APPEND CMAKE_MODULE_PATH @ToolchainDir@/script)

include(@ToolchainDir@/script/UseTS.cmake)
include(@ToolchainDir@/mod/buildToolchainMod.cmake)

cmake_minimum_required(VERSION 3.1)
project(@NAME@ CXX TS)

set(DEV d)
getPathsJSON(@PATH@make.json ${DEV})

message("sedim")
message(${DEV})

message("reddddnir")
message(@PATH@${DEV}/tsconfig.json)

if(NOT EXISTS @PATH@${DEV}/tsconfig.json)
    generate_tscfg(
        SOURCE_DIRS @PATH@${DEV}
        FILE_PATH ${DEV}/tsconfig.json
    )
endif()

if(NOT EXISTS @PATH@${outputdeclarations})
    create_ts_library_declarations(
        SOURCE_DIRS @PATH@${DEV}
        OUTPUT_DIRS @PATH@${outputdeclarations}
    )
endif()

if(NOT EXISTS @PATH@${outputmod}/${DEV})
    add_ts_tchainmod(
        @NAME@
        @PATH@
        ${DEV}
    )
endif()

#set(res src/assets)

copyResources(
    @PATH@
    src/assets
    ${outputmod}
    FALSE
)

set(plit plit plitio)

generateBuildCfg(
    @PATH@
    ${outputmod}
    "${plit}"
    wse
    FALSE
)