list(APPEND CMAKE_MODULE_PATH @ToolchainDir@/script)

include(@ToolchainDir@/script/UseTS.cmake)
include(@ToolchainDir@/mod/buildToolchainMod.cmake)

cmake_minimum_required(VERSION 3.1)
project(@NAME@ CXX TS)

set(DEV d)
set(SDEV d)
set(LIBS d)
set(SLIBS d)
getPathsFile(@PATH@make.json ${SDEV} ${DEV} ${SLIBS} ${LIBS} #[[ASSETS]])

#set elf
#set bytecode
set(assets assets)
set(assetssubs "${assets}/res" "${assets}/gui")
set(libs lib)

message("sedim")
message(${SDEV})
message(${DEV})
message(${SLIBS})
message(${LIBS})

message("reddddnir")
message(@PATH@${SDEV}/tsconfig.json)

if(NOT EXISTS @PATH@${SDEV}/tsconfig.json)
    generate_tscfg(
        SOURCE_DIRS @PATH@${SDEV}
        FILE_PATH ${SDEV}/tsconfig.json
    )
endif()

if(NOT EXISTS @PATH@${outputdeclarations})
    create_ts_library_declarations(
        SOURCE_DIRS @PATH@${SDEV}
        OUTPUT_DIRS @PATH@${outputdeclarations}
    )
endif()

copyResources(
    @PATH@
    ${outputmod}
    "${assets}"
    FALSE
)

generateBuildCfg(
    @PATH@
    ${outputmod}
    "${assetssubs}"
    "${libs}"
    FALSE
)

if(NOT EXISTS @PATH@${outputmod}/${SDEV})
    add_ts_tchainmod(
        @NAME@
        @PATH@
        ${SDEV}
    )
endif()