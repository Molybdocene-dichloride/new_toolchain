message(sopolotipop)

include(@ToolchainDir@/script/UseTS.cmake)
include(@ToolchainDir@/mod/buildToolchainMod.cmake)

getPathsFile(@NAME@ @PATH@ @PATH@make.json)

set(@NAME@_ASSETS "${RES}" "${GUI}" "${ADDIT}" "build.config")
set(@NAME@_SASSETS "${SRES}" "${SGUI}" "${SADDIT}" "src/build.config")

message("sedim")
message(${@NAME@_SDEV})
message(${@NAME@_DEV})
message(${@NAME@_SLIBS})
message(${@NAME@_LIBS})
message(${@NAME@_SPRELOADER})
message(${@NAME@_PRELOADER})
message(${@NAME@_SRES})
message(${@NAME@_RES})
message(${@NAME@_SGUI})
message(${@NAME@_GUI})
message("${@NAME@_ADDIT}")
message("${@NAME@_SADDIT}")
message("${@NAME@_COMPILEJAVA}")
message("${@NAME@_COMPILENATIVE}")

message(${DEVTARGET})

message("${TS}")
message("${STS}")

#[[if(NOT EXISTS @PATH@${SPRELOADER}/tsconfig.json)
    generateTSConfig(
        SOURCE_DIRS @PATH@${SPRELOADER}/
        FILE_PATH tsconfig.json
        INNER true
    )
endif()

if(NOT EXISTS @PATH@${SLIBS}/tsconfig.json)
    generateTSConfig(
        SOURCE_DIRS @PATH@${SLIBS}/
        FILE_PATH tsconfig.json
        INNER true
    )
endif()

if(NOT EXISTS @PATH@${SDEV}/tsconfig.json)
    set(od "\"../../output/declarations/lib/*.d.ts\"")
    generateTSConfig(
        SOURCE_DIRS @PATH@${SDEV}/
        FILE_PATH tsconfig.json
        INCLUDES ${od}
        INNER true
    )
endif()]]

set(outputdeclarationspreloader ${output}/declarations/${PRELOADER})
set(outputdeclarationslib ${output}/declarations/${LIBS})
set(outputdeclarationsdev ${output}/declarations/${DEV})

message(degfrrr)

#[[file(GLOB RECURSE slibz @PATH@${SPRELOADER}/"*.ts")
message(floo)
message(floo)
list(LENGTH slibz len)
    
if(${len} GREATER 0 AND NOT EXISTS @PATH@${outputdeclarationspreloader})
    createTSDeclarations(
        SOURCE_DIRS @PATH@${SPRELOADER}
        OUTPUT_DIRS @PATH@${outputdeclarationspreloader}
    )
endif()

file(GLOB RECURSE slibz @PATH@${SLIBS}/"*.ts") 
list(LENGTH slibz len)
if(${len} GREATER 0 AND NOT EXISTS @PATH@${outputdeclarationslib})
    createTSDeclarations(
        SOURCE_DIRS @PATH@${SLIBS}
        OUTPUT_DIRS @PATH@${outputdeclarationslib}
    )
endif()

if(NOT EXISTS @PATH@${outputdeclarationsdev}/)
    message(derrr)
    createTSDeclarations(
        SOURCE_DIRS @PATH@${SDEV}
        OUTPUT_DIRS @PATH@${outputdeclarationsdev}/
    )
endif()

add_js_library(
    @NAME@
    #SOURCE_DIRS @PATH@${SDEV}
    OUTPUT_DIRS @PATH@${outputdeclarations}/
)]]