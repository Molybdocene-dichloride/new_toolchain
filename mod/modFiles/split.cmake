macro(globtofilesFile PREFIX file)
    message(globtofilesFile)
    file(READ ${file} content)
    globtofiles(${content})
endmacro()
macro(globtofiles PREFIX str path)
    message(globtofiles)
    message(${path})
    foreach(st IN ITEMS ${str})
        string(REGEX REPLACE "[*][*][/][*]$" "**" st ${st})
        #if(path)
            set(sta ${path}/${st})
        #endif()
        #message(${st})
        #message(${sta})
        file(GLOB_RECURSE files ${sta})
        
        string(LENGTH ${path}/ ln)
        math(EXPR ln "${ln}")
        list(LENGTH files lnf)
        if(${lnf} GREATER 1)
            message("treee")
            #message("${files}")
            foreach(file IN ITEMS ${files})
                string(LENGTH ${file} ln2)
                math(EXPR ln2 "${ln2} - 1")
                string(SUBSTRING ${file} ${ln} ${ln2} file)
                #message(${file})
                list(APPEND ${PREFIX}_lines_globbed ${file})
            endforeach()
            #message("${${PREFIX}_lines_globbed}")
            #list(APPEND ${PREFIX}_lines_globbed "${files2}")
        else()
            #message(noglob)
            #message(${st})
            list(APPEND lines_globbed "${st}")
            #message("${${PREFIX}_lines_globbed}")
        endif()
    endforeach()
    message(${PREFIX}_lines_globbed)
endmacro()

macro(tstojsFile file)
    message(tstojsFile)
    file(READ ${file} content)
    tstojs(${content})
endmacro()
macro(tstojs str)
    message(tstojs)
    STRING(REGEX REPLACE ".ts\n" ".js\n" output ${str})
    STRING(REGEX REPLACE ".ts " ".js\n" output ${output})
    STRING(REGEX REPLACE "(.ts)$" ".js\n" output ${output})
    message(${output})
endmacro()
macro(blanktosemi includes)
    STRING(REGEX REPLACE "\n" ";" includes ${includes})
endmacro()