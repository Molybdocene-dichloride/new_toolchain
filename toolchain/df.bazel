toolchain_type(
	name = "toolchain_type",
	visibility = ["//visibility:public"],
)

inner_mod_byID = rule(
    implementation = inner_mod_impl,
    attrs = {
        "id": attr.int,
        "build_file": attr.label(allow_files = True),
	"strip_prefix": attr.label,
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_mod_byName = rule(
    implementation = inner_mod2_impl,
    attrs = {
        "name": attr.label,
        "build_file": attr.label(allow_files = True),
	"strip_prefix": attr.label,
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_git_repository = rule(
    implementation = inner_git_impl,
    attrs = {
        "name": attr.label,
        "build_file": attr.label(allow_files = True),
	"strip_prefix": attr.label,
	"url": attr.label_list(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_archive = rule(
    implementation = inner_archive_impl,
    attrs = {
        "name": attr.label,
        "build_file": attr.label(allow_files = True),
	"strip_prefix": attr.label,
	"url": attr.label_list(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_local_repository = rule(
    implementation = inner_local_impl,
    attrs = {
        "name": attr.label,
        "build_file": attr.label(allow_files = True),
	"strip_prefix": attr.label,
	"path": attr.label(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_js = rule(
    implementation = inner_js_impl,
    attrs = {
        "name": attr.label,
        "srcs": attr.label_list(allow_files = True),
        "deps": attr.label_list(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_cc_library = rule(
    implementation = inner_cc_library_impl,
    attrs = {
        "name": attr.label,
	"lang": attr.label,
	"type": attr.bool,
	"hdrs": attr.label_list(allow_files = True),
        "srcs": attr.label_list(allow_files = True),
        "deps": attr.label_list(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_cc_import = rule(
    implementation = inner_cc_import_impl,
    attrs = {
        "name": attr.label,
        "hdrs": attr.label_list(allow_files = True),
        "deps": attr.label_list(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)

inner_cmake = rule(
    implementation = inner_cmake_impl,
    attrs = {
        "name": attr.label,
        "cmake_options": attr.label_list,
	"generate_crosstool_file": attr.bool,
	"lib_source": attr.label(allow_files = True),
        "make_commands": attr.label_list(allow_files = True),
	"visibility": attr.label_list,
	"out_lib_dir": attr.label(allow_files = True),
	"library": attr.label(allow_files = True),
    },
    toolchains = ["//inner:toolchain_type"],
)